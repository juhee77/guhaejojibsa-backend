# This is a basic workflow to help you get started with Actions

name: Backend Deploy

## Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
#
#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest
    environment: production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # (2) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name : Set secret file (prod)
        uses: actions/checkout@v2
        run : | 
          touch ./api/src/main/resources/application-prod.yml
          echo "${{env.APPLICATION_PROD}}" > ./api/src/main/resources/application-prod.yml

      - name : Set secret file (test)
        uses: actions/checkout@v2
        run : | 
          touch ./api/src/main/resources/application-test.yml
          echo "${{env.APPLICATION_TEST}}" > ./api/src/main/resources/application-test.yml

      # (5) 현재 위치 파악하는 cmd
      - name: cmd
        run: |
          pwd
          ls -la
          echo "ls ./api/src/main/resources"
          ls -la ./api/src/main/resources
          sudo chmod +x ./api/src/main/resources/application-prod.yml
          ls -la ./api/src/main/resources

       # Grant execute permission to gradlew
      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      # Spring Boot Build
      - name: Spring Boot Build
        run: |
          cd backend
          ./gradlew clean build --exclude-task test

      # 도커 허브 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }} ./

      # Deploy to AWS EC2
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_HOST }} # EC2 인스턴스 퍼블릭 DNS
          username: ubuntu
          key: ${{ secrets.AWS_PRIVACY_KEY }} # pem 키
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest
            sudo docker stop ${{ secrets.DOCKERHUB_REPOSITORY }} || true
            sudo docker rm ${{ secrets.DOCKERHUB_REPOSITORY }} || true
            sudo docker image prune -a || y
            sudo docker run -d -p 8080:8080 -e SPRING_PROFILES_ACTIVE=prod --name todoApp --restart always ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:latest
